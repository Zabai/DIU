
import javax.swing.JFrame;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zabai Armas
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        int value = 50;
        
        Slider.setValue(value);
        ProgressBar.setValue(value);
        SliderValue.setText(String.valueOf(value));
        
        RGBWindow = new RGBSlider();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Author = new javax.swing.JLabel();
        Slider = new javax.swing.JSlider();
        ProgressBar = new javax.swing.JProgressBar();
        StatusInfo = new javax.swing.JLabel();
        PositionStatus = new javax.swing.JTextField();
        KeyStatus = new javax.swing.JTextField();
        ValueInfo = new javax.swing.JLabel();
        SliderValue = new javax.swing.JTextField();
        RGBButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monitor de Deslizador");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Author.setText("Hecho por Zabai Armas Herrera");

        Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderStateChanged(evt);
            }
        });
        Slider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SliderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SliderMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SliderMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderMouseReleased(evt);
            }
        });

        StatusInfo.setText("Estado del rat√≥n");

        PositionStatus.setText("---");
        PositionStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PositionStatusActionPerformed(evt);
            }
        });

        KeyStatus.setText("---");
        KeyStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeyStatusActionPerformed(evt);
            }
        });

        ValueInfo.setText("Valor del deslizador");

        RGBButton.setText("RGB");
        RGBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RGBButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Author)
                    .addComponent(Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PositionStatus)
                            .addComponent(KeyStatus)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ValueInfo)
                                    .addComponent(StatusInfo))
                                .addGap(0, 55, Short.MAX_VALUE))
                            .addComponent(SliderValue)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RGBButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StatusInfo)
                        .addGap(18, 18, 18)
                        .addComponent(PositionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(KeyStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ValueInfo))
                .addGap(18, 18, 18)
                .addComponent(SliderValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Author, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RGBButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KeyStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeyStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeyStatusActionPerformed

    private void PositionStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PositionStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PositionStatusActionPerformed

    private void SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderStateChanged
        // TODO add your handling code here:
        int value = Slider.getValue();
        ProgressBar.setValue(value);
        SliderValue.setText(String.valueOf(value));
    }//GEN-LAST:event_SliderStateChanged

    private void SliderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderMouseEntered
        // TODO add your handling code here:
        PositionStatus.setText("Dentro");
    }//GEN-LAST:event_SliderMouseEntered

    private void SliderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderMouseExited
        // TODO add your handling code here:
        PositionStatus.setText("Fuera");
    }//GEN-LAST:event_SliderMouseExited

    private void SliderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderMousePressed
        // TODO add your handling code here:
        KeyStatus.setText("Presionado");
    }//GEN-LAST:event_SliderMousePressed

    private void SliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderMouseReleased
        // TODO add your handling code here:
        KeyStatus.setText("Liberado");
    }//GEN-LAST:event_SliderMouseReleased

    private void RGBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RGBButtonActionPerformed
        // TODO add your handling code here:
        RGBWindow.setVisible(true);
    }//GEN-LAST:event_RGBButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Author;
    private javax.swing.JTextField KeyStatus;
    private javax.swing.JTextField PositionStatus;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JButton RGBButton;
    private javax.swing.JSlider Slider;
    private javax.swing.JTextField SliderValue;
    private javax.swing.JLabel StatusInfo;
    private javax.swing.JLabel ValueInfo;
    // End of variables declaration//GEN-END:variables
    private final RGBSlider RGBWindow;
}
