
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.AdjustmentEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JScrollBar;
import javax.swing.JViewport;
import javax.swing.SwingUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zabai Armas
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setLocationRelativeTo(null);
        
        Dimension iDimension = Image.getSize();
        iWidth = iDimension.width;
        iHeight = iDimension.height;
        IWidth.setText(String.valueOf(iWidth));
        IHeight.setText(String.valueOf(iHeight));
        
        view = Scroll.getViewport();
        Dimension vDimension = view.getExtentSize();
        vWidth = vDimension.width;
        vHeight = vDimension.height;
        VWidth.setText(String.valueOf(vWidth));
        VHeight.setText(String.valueOf(vHeight));
        Point p = view.getViewPosition();
        vX = p.x;
        vY = p.y;
        VX.setText(String.valueOf(vX));
        VY.setText(String.valueOf(vY));
        
        // Listener asociados a las barras de Scroll de forma manual
        hBar = Scroll.getHorizontalScrollBar();
        vBar = Scroll.getVerticalScrollBar();
        hBar.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            @Override
            public void adjustmentValueChanged(AdjustmentEvent e) {
                hScrollAdjust(e);
            }
        });
        vBar.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            @Override
            public void adjustmentValueChanged(AdjustmentEvent e) {
                vScrollAdjust(e);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Author = new javax.swing.JLabel();
        Scroll = new javax.swing.JScrollPane();
        Image = new javax.swing.JLabel();
        ImageData = new javax.swing.JPanel();
        IWidthInfo = new javax.swing.JLabel();
        IHeightInfo = new javax.swing.JLabel();
        IWidth = new javax.swing.JTextField();
        IHeight = new javax.swing.JTextField();
        CursorData = new javax.swing.JPanel();
        CStatusInfo = new javax.swing.JLabel();
        CXInfo = new javax.swing.JLabel();
        CYInfo = new javax.swing.JLabel();
        CStatus = new javax.swing.JTextField();
        CX = new javax.swing.JTextField();
        CY = new javax.swing.JTextField();
        ViewportData = new javax.swing.JPanel();
        VWidthInfo = new javax.swing.JLabel();
        VHeightInfo = new javax.swing.JLabel();
        VXInfo = new javax.swing.JLabel();
        VYInfo = new javax.swing.JLabel();
        VWidth = new javax.swing.JTextField();
        VHeight = new javax.swing.JTextField();
        VX = new javax.swing.JTextField();
        VY = new javax.swing.JTextField();
        MenuBar = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        OpenItem = new javax.swing.JMenuItem();
        CloseItem = new javax.swing.JMenuItem();
        Separator = new javax.swing.JPopupMenu.Separator();
        ExitItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demo de Viewport y dragging");

        Author.setText("Hecho por Zabai Armas Herrera");

        Scroll.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                ScrollComponentResized(evt);
            }
        });

        Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MapaGC.jpg"))); // NOI18N
        Image.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                ImageMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ImageMouseMoved(evt);
            }
        });
        Image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ImageMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ImageMouseReleased(evt);
            }
        });
        Scroll.setViewportView(Image);

        ImageData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imagen", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        IWidthInfo.setText("Ancho");

        IHeightInfo.setText("Alto");

        IWidth.setEditable(false);

        IHeight.setEditable(false);

        javax.swing.GroupLayout ImageDataLayout = new javax.swing.GroupLayout(ImageData);
        ImageData.setLayout(ImageDataLayout);
        ImageDataLayout.setHorizontalGroup(
            ImageDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImageDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ImageDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(IHeightInfo)
                    .addComponent(IWidthInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ImageDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IWidth)
                    .addComponent(IHeight)))
        );
        ImageDataLayout.setVerticalGroup(
            ImageDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImageDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ImageDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IWidthInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ImageDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IHeightInfo)
                    .addComponent(IHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2))
        );

        CursorData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cursor", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        CStatusInfo.setText("Estado");

        CXInfo.setText("Pos X");

        CYInfo.setText("Pos Y");

        CStatus.setEditable(false);

        CX.setEditable(false);

        CY.setEditable(false);

        javax.swing.GroupLayout CursorDataLayout = new javax.swing.GroupLayout(CursorData);
        CursorData.setLayout(CursorDataLayout);
        CursorDataLayout.setHorizontalGroup(
            CursorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CursorDataLayout.createSequentialGroup()
                .addGroup(CursorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(CYInfo)
                    .addComponent(CXInfo)
                    .addComponent(CStatusInfo))
                .addGap(18, 18, 18)
                .addGroup(CursorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(CX)
                    .addComponent(CY)))
        );
        CursorDataLayout.setVerticalGroup(
            CursorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CursorDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CursorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CStatusInfo)
                    .addComponent(CStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CursorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CXInfo)
                    .addComponent(CX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CursorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CYInfo)
                    .addComponent(CY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        ViewportData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Viewport", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        VWidthInfo.setText("Ancho");

        VHeightInfo.setText("Alto");

        VXInfo.setText("Pos X");

        VYInfo.setText("Pos Y");

        VWidth.setEditable(false);

        VHeight.setEditable(false);

        VX.setEditable(false);

        VY.setEditable(false);

        javax.swing.GroupLayout ViewportDataLayout = new javax.swing.GroupLayout(ViewportData);
        ViewportData.setLayout(ViewportDataLayout);
        ViewportDataLayout.setHorizontalGroup(
            ViewportDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewportDataLayout.createSequentialGroup()
                .addComponent(VYInfo)
                .addGap(22, 22, 22)
                .addComponent(VY))
            .addGroup(ViewportDataLayout.createSequentialGroup()
                .addComponent(VWidthInfo)
                .addGap(18, 18, 18)
                .addComponent(VWidth))
            .addGroup(ViewportDataLayout.createSequentialGroup()
                .addComponent(VHeightInfo)
                .addGap(29, 29, 29)
                .addComponent(VHeight))
            .addGroup(ViewportDataLayout.createSequentialGroup()
                .addComponent(VXInfo)
                .addGap(22, 22, 22)
                .addComponent(VX))
        );
        ViewportDataLayout.setVerticalGroup(
            ViewportDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewportDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ViewportDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VWidthInfo)
                    .addComponent(VWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ViewportDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VHeightInfo)
                    .addComponent(VHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ViewportDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VXInfo)
                    .addComponent(VX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ViewportDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VYInfo)
                    .addComponent(VY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        File.setText("File");

        OpenItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        OpenItem.setText("Open");
        OpenItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenItemActionPerformed(evt);
            }
        });
        File.add(OpenItem);

        CloseItem.setText("Close");
        CloseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseItemActionPerformed(evt);
            }
        });
        File.add(CloseItem);
        File.add(Separator);

        ExitItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        ExitItem.setText("Exit");
        ExitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitItemActionPerformed(evt);
            }
        });
        File.add(ExitItem);

        MenuBar.add(File);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                    .addComponent(Author))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ImageData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CursorData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ViewportData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ImageData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CursorData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ViewportData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(Author)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageMousePressed
        // TODO add your handling code here:
        Image.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CStatus.setText("Presionado");
        
        Point position = Image.getMousePosition();
        cX0 = position.x;
        cY0 = position.y;
        p0 = view.getViewPosition();
    }//GEN-LAST:event_ImageMousePressed

    private void ImageMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageMouseReleased
        // TODO add your handling code here:
        Image.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CStatus.setText("Liberado");
    }//GEN-LAST:event_ImageMouseReleased

    private void ImageMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageMouseDragged
        // TODO add your handling code here:
        CStatus.setText("Arrastrando");
        
        Point position = Image.getMousePosition();
        cX = position.x;
        cY = position.y;
        CX.setText(String.valueOf(cX));
        CY.setText(String.valueOf(cY));
        
        Point p = view.getViewPosition();
        p.x = p0.x - (int) ((cX-cX0)/1.5);
        p.y = p0.y - (int) ((cY-cY0)/1.5);
        if(p.x < 0) p.x = 0;
        if(p.x > iWidth-vWidth && iWidth > vWidth) p.x = iWidth - vWidth;
        if(p.y < 0) p.y = 0;
        if(p.y > iHeight-vHeight && iHeight > vHeight) p.y = iHeight - vHeight;
        view.setViewPosition(p);
    }//GEN-LAST:event_ImageMouseDragged

    private void ImageMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageMouseMoved
        // TODO add your handling code here:
        Point position = Image.getMousePosition();
        cX = position.x;
        cY = position.y;
        CX.setText(String.valueOf(cX));
        CY.setText(String.valueOf(cY));
    }//GEN-LAST:event_ImageMouseMoved

    private void ScrollComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ScrollComponentResized
        // TODO add your handling code here:
        Dimension vDimension = view.getExtentSize();
        vWidth = vDimension.width;
        vHeight = vDimension.height;
        VWidth.setText(String.valueOf(vWidth));
        VHeight.setText(String.valueOf(vHeight));
    }//GEN-LAST:event_ScrollComponentResized

    private void ExitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitItemActionPerformed
        // TODO add your handling code here:
        ExitDialog exitDialog = new ExitDialog(this, rootPaneCheckingEnabled);
    }//GEN-LAST:event_ExitItemActionPerformed

    private void OpenItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenItemActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(null);
        fileChooser.addChoosableFileFilter(new ImageFilter());
        int returned = fileChooser.showOpenDialog(OpenItem);
        
        if(returned == JFileChooser.APPROVE_OPTION){
            File file = fileChooser.getSelectedFile();
            Image.setIcon(new javax.swing.ImageIcon(file.getAbsolutePath()));
            SwingUtilities.updateComponentTreeUI(this);
        }
    }//GEN-LAST:event_OpenItemActionPerformed

    private void CloseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseItemActionPerformed
        // TODO add your handling code here:
        Image.setIcon(null);
    }//GEN-LAST:event_CloseItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Author;
    private javax.swing.JTextField CStatus;
    private javax.swing.JLabel CStatusInfo;
    private javax.swing.JTextField CX;
    private javax.swing.JLabel CXInfo;
    private javax.swing.JTextField CY;
    private javax.swing.JLabel CYInfo;
    private javax.swing.JMenuItem CloseItem;
    private javax.swing.JPanel CursorData;
    private javax.swing.JMenuItem ExitItem;
    private javax.swing.JMenu File;
    private javax.swing.JTextField IHeight;
    private javax.swing.JLabel IHeightInfo;
    private javax.swing.JTextField IWidth;
    private javax.swing.JLabel IWidthInfo;
    private javax.swing.JLabel Image;
    private javax.swing.JPanel ImageData;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem OpenItem;
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JPopupMenu.Separator Separator;
    private javax.swing.JTextField VHeight;
    private javax.swing.JLabel VHeightInfo;
    private javax.swing.JTextField VWidth;
    private javax.swing.JLabel VWidthInfo;
    private javax.swing.JTextField VX;
    private javax.swing.JLabel VXInfo;
    private javax.swing.JTextField VY;
    private javax.swing.JLabel VYInfo;
    private javax.swing.JPanel ViewportData;
    // End of variables declaration//GEN-END:variables
    private int iWidth, iHeight;
    private int cX, cY, cX0, cY0;
    private JViewport view;
    private int vWidth, vHeight,vX, vY;
    private JScrollBar hBar, vBar;
    private Point p0;
    
    private void hScrollAdjust(java.awt.event.AdjustmentEvent e){
        Point p = view.getViewPosition();
        vX = p.x;
        VX.setText(String.valueOf(vX));
    }
    
    private void vScrollAdjust(java.awt.event.AdjustmentEvent e){
        Point p = view.getViewPosition();
        vY = p.y;
        VY.setText(String.valueOf(vY));
    }
    
}